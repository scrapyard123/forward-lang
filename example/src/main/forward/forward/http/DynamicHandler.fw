// SPDX-License-Identifier: MIT

import {
    java.lang.String
    java.lang.System

    com.sun.net.httpserver.HttpExchange
    com.sun.net.httpserver.HttpHandler

    java.io.OutputStream

    forward.java.Bridge
    forward.java.ResourceData
}

class forward.http.DynamicHandler : HttpHandler

constructor():void { return }

handle(exchange: HttpExchange): void {
    var path:String = exchange->getRequestURI()->getPath()
    System->out->println(exchange->getRequestMethod()->concat(": ")->concat(path))

    var data:String =
        Bridge->asString(exchange->getRequestBody()->readAllBytes())
            ->replaceAll("field=" "")

    // TODO: Read template only once
    var template:ResourceData = Bridge->readResource("/template.html")
    if template->isAbsent() {
        exchange->sendResponseHeaders(500 0L)
        exchange->getResponseBody()->close()
        return
    }

    var response:String = Bridge->asString(template->getData())->replaceAll("T_NAME" data)

    exchange->getResponseHeaders()->add("Content-Type" "text/html; charset=utf-8")
    exchange->sendResponseHeaders(200 Bridge->asLong(Bridge->byteLength(response)))

    var os:OutputStream = exchange->getResponseBody()
    os->write(response->getBytes())
    os->close()
    return
}
